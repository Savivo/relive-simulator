{"version":3,"file":"workbox-routing.dev.js","sources":["../_version.js","../utils/constants.js","../utils/normalizeHandler.js","../Route.js","../NavigationRoute.js","../RegExpRoute.js","../Router.js","../utils/getOrCreateDefaultRouter.js","../registerRoute.js","../setCatchHandler.js","../setDefaultHandler.js"],"sourcesContent":["\"use strict\";\r\n// @ts-ignore\r\ntry {\r\n    self['workbox:routing:6.6.0'] && _();\r\n}\r\ncatch (e) { }\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * The default HTTP method, 'GET', used when there's no specific method\r\n * configured for a route.\r\n *\r\n * @type {string}\r\n *\r\n * @private\r\n */\r\nexport const defaultMethod = 'GET';\r\n/**\r\n * The list of valid HTTP methods associated with requests that could be routed.\r\n *\r\n * @type {Array<string>}\r\n *\r\n * @private\r\n */\r\nexport const validMethods = [\r\n    'DELETE',\r\n    'GET',\r\n    'HEAD',\r\n    'PATCH',\r\n    'POST',\r\n    'PUT',\r\n];\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport '../_version.js';\r\n/**\r\n * @param {function()|Object} handler Either a function, or an object with a\r\n * 'handle' method.\r\n * @return {Object} An object with a handle method.\r\n *\r\n * @private\r\n */\r\nexport const normalizeHandler = (handler) => {\r\n    if (handler && typeof handler === 'object') {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.hasMethod(handler, 'handle', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Route',\r\n                funcName: 'constructor',\r\n                paramName: 'handler',\r\n            });\r\n        }\r\n        return handler;\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isType(handler, 'function', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Route',\r\n                funcName: 'constructor',\r\n                paramName: 'handler',\r\n            });\r\n        }\r\n        return { handle: handler };\r\n    }\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { defaultMethod, validMethods } from './utils/constants.js';\r\nimport { normalizeHandler } from './utils/normalizeHandler.js';\r\nimport './_version.js';\r\n/**\r\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\r\n * The \"match\" callback determine if a route should be used to \"handle\" a\r\n * request by returning a non-falsy value if it can. The \"handler\" callback\r\n * is called when there is a match and should return a Promise that resolves\r\n * to a `Response`.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nclass Route {\r\n    /**\r\n     * Constructor for Route class.\r\n     *\r\n     * @param {workbox-routing~matchCallback} match\r\n     * A callback function that determines whether the route matches a given\r\n     * `fetch` event by returning a non-falsy value.\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resolving to a Response.\r\n     * @param {string} [method='GET'] The HTTP method to match the Route\r\n     * against.\r\n     */\r\n    constructor(match, handler, method = defaultMethod) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isType(match, 'function', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Route',\r\n                funcName: 'constructor',\r\n                paramName: 'match',\r\n            });\r\n            if (method) {\r\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\r\n            }\r\n        }\r\n        // These values are referenced directly by Router so cannot be\r\n        // altered by minificaton.\r\n        this.handler = normalizeHandler(handler);\r\n        this.match = match;\r\n        this.method = method;\r\n    }\r\n    /**\r\n     *\r\n     * @param {workbox-routing-handlerCallback} handler A callback\r\n     * function that returns a Promise resolving to a Response\r\n     */\r\n    setCatchHandler(handler) {\r\n        this.catchHandler = normalizeHandler(handler);\r\n    }\r\n}\r\nexport { Route };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { Route } from './Route.js';\r\nimport './_version.js';\r\n/**\r\n * NavigationRoute makes it easy to create a\r\n * {@link workbox-routing.Route} that matches for browser\r\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\r\n *\r\n * It will only match incoming Requests whose\r\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\r\n * is set to `navigate`.\r\n *\r\n * You can optionally only apply this route to a subset of navigation requests\r\n * by using one or both of the `denylist` and `allowlist` parameters.\r\n *\r\n * @memberof workbox-routing\r\n * @extends workbox-routing.Route\r\n */\r\nclass NavigationRoute extends Route {\r\n    /**\r\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\r\n     * take precedence and the request will not match this route.\r\n     *\r\n     * The regular expressions in `allowlist` and `denylist`\r\n     * are matched against the concatenated\r\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\r\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\r\n     * portions of the requested URL.\r\n     *\r\n     * *Note*: These RegExps may be evaluated against every destination URL during\r\n     * a navigation. Avoid using\r\n     * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\r\n     * or else your users may see delays when navigating your site.\r\n     *\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     * @param {Object} options\r\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\r\n     * the route will not handle the request (even if a allowlist RegExp matches).\r\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\r\n     * match the URL's pathname and search parameter, the route will handle the\r\n     * request (assuming the denylist doesn't match).\r\n     */\r\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isArrayOfClass(allowlist, RegExp, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'NavigationRoute',\r\n                funcName: 'constructor',\r\n                paramName: 'options.allowlist',\r\n            });\r\n            assert.isArrayOfClass(denylist, RegExp, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'NavigationRoute',\r\n                funcName: 'constructor',\r\n                paramName: 'options.denylist',\r\n            });\r\n        }\r\n        super((options) => this._match(options), handler);\r\n        this._allowlist = allowlist;\r\n        this._denylist = denylist;\r\n    }\r\n    /**\r\n     * Routes match handler.\r\n     *\r\n     * @param {Object} options\r\n     * @param {URL} options.url\r\n     * @param {Request} options.request\r\n     * @return {boolean}\r\n     *\r\n     * @private\r\n     */\r\n    _match({ url, request }) {\r\n        if (request && request.mode !== 'navigate') {\r\n            return false;\r\n        }\r\n        const pathnameAndSearch = url.pathname + url.search;\r\n        for (const regExp of this._denylist) {\r\n            if (regExp.test(pathnameAndSearch)) {\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\r\n                        `being used, since the URL matches this denylist pattern: ` +\r\n                        `${regExp.toString()}`);\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\r\n            }\r\n            return true;\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\r\n                `being used, since the URL being navigated to doesn't ` +\r\n                `match the allowlist.`);\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport { NavigationRoute };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { Route } from './Route.js';\r\nimport './_version.js';\r\n/**\r\n * RegExpRoute makes it easy to create a regular expression based\r\n * {@link workbox-routing.Route}.\r\n *\r\n * For same-origin requests the RegExp only needs to match part of the URL. For\r\n * requests against third-party servers, you must define a RegExp that matches\r\n * the start of the URL.\r\n *\r\n * @memberof workbox-routing\r\n * @extends workbox-routing.Route\r\n */\r\nclass RegExpRoute extends Route {\r\n    /**\r\n     * If the regular expression contains\r\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\r\n     * the captured values will be passed to the\r\n     * {@link workbox-routing~handlerCallback} `params`\r\n     * argument.\r\n     *\r\n     * @param {RegExp} regExp The regular expression to match against URLs.\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     * @param {string} [method='GET'] The HTTP method to match the Route\r\n     * against.\r\n     */\r\n    constructor(regExp, handler, method) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isInstance(regExp, RegExp, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'RegExpRoute',\r\n                funcName: 'constructor',\r\n                paramName: 'pattern',\r\n            });\r\n        }\r\n        const match = ({ url }) => {\r\n            const result = regExp.exec(url.href);\r\n            // Return immediately if there's no match.\r\n            if (!result) {\r\n                return;\r\n            }\r\n            // Require that the match start at the first character in the URL string\r\n            // if it's a cross-origin request.\r\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\r\n            // behind this behavior.\r\n            if (url.origin !== location.origin && result.index !== 0) {\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\r\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\r\n                        `handle cross-origin requests if they match the entire URL.`);\r\n                }\r\n                return;\r\n            }\r\n            // If the route matches, but there aren't any capture groups defined, then\r\n            // this will return [], which is truthy and therefore sufficient to\r\n            // indicate a match.\r\n            // If there are capture groups, then it will return their values.\r\n            return result.slice(1);\r\n        };\r\n        super(match, handler, method);\r\n    }\r\n}\r\nexport { RegExpRoute };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport { defaultMethod } from './utils/constants.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { normalizeHandler } from './utils/normalizeHandler.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport './_version.js';\r\n/**\r\n * The Router can be used to process a `FetchEvent` using one or more\r\n * {@link workbox-routing.Route}, responding with a `Response` if\r\n * a matching route exists.\r\n *\r\n * If no route matches a given a request, the Router will use a \"default\"\r\n * handler if one is defined.\r\n *\r\n * Should the matching Route throw an error, the Router will use a \"catch\"\r\n * handler if one is defined to gracefully deal with issues and respond with a\r\n * Request.\r\n *\r\n * If a request matches multiple routes, the **earliest** registered route will\r\n * be used to respond to the request.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nclass Router {\r\n    /**\r\n     * Initializes a new Router.\r\n     */\r\n    constructor() {\r\n        this._routes = new Map();\r\n        this._defaultHandlerMap = new Map();\r\n    }\r\n    /**\r\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\r\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\r\n     * instances that are registered.\r\n     */\r\n    get routes() {\r\n        return this._routes;\r\n    }\r\n    /**\r\n     * Adds a fetch event listener to respond to events when a route matches\r\n     * the event's request.\r\n     */\r\n    addFetchListener() {\r\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n        self.addEventListener('fetch', ((event) => {\r\n            const { request } = event;\r\n            const responsePromise = this.handleRequest({ request, event });\r\n            if (responsePromise) {\r\n                event.respondWith(responsePromise);\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Adds a message event listener for URLs to cache from the window.\r\n     * This is useful to cache resources loaded on the page prior to when the\r\n     * service worker started controlling it.\r\n     *\r\n     * The format of the message data sent from the window should be as follows.\r\n     * Where the `urlsToCache` array may consist of URL strings or an array of\r\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\r\n     *\r\n     * ```\r\n     * {\r\n     *   type: 'CACHE_URLS',\r\n     *   payload: {\r\n     *     urlsToCache: [\r\n     *       './script1.js',\r\n     *       './script2.js',\r\n     *       ['./script3.js', {mode: 'no-cors'}],\r\n     *     ],\r\n     *   },\r\n     * }\r\n     * ```\r\n     */\r\n    addCacheListener() {\r\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n        self.addEventListener('message', ((event) => {\r\n            // event.data is type 'any'\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n            if (event.data && event.data.type === 'CACHE_URLS') {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                const { payload } = event.data;\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\r\n                }\r\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\r\n                    if (typeof entry === 'string') {\r\n                        entry = [entry];\r\n                    }\r\n                    const request = new Request(...entry);\r\n                    return this.handleRequest({ request, event });\r\n                    // TODO(philipwalton): TypeScript errors without this typecast for\r\n                    // some reason (probably a bug). The real type here should work but\r\n                    // doesn't: `Array<Promise<Response> | undefined>`.\r\n                })); // TypeScript\r\n                event.waitUntil(requestPromises);\r\n                // If a MessageChannel was used, reply to the message on success.\r\n                if (event.ports && event.ports[0]) {\r\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Apply the routing rules to a FetchEvent object to get a Response from an\r\n     * appropriate Route's handler.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Request} options.request The request to handle.\r\n     * @param {ExtendableEvent} options.event The event that triggered the\r\n     *     request.\r\n     * @return {Promise<Response>|undefined} A promise is returned if a\r\n     *     registered route can handle the request. If there is no matching\r\n     *     route and there's no `defaultHandler`, `undefined` is returned.\r\n     */\r\n    handleRequest({ request, event, }) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isInstance(request, Request, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'handleRequest',\r\n                paramName: 'options.request',\r\n            });\r\n        }\r\n        const url = new URL(request.url, location.href);\r\n        if (!url.protocol.startsWith('http')) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\r\n            }\r\n            return;\r\n        }\r\n        const sameOrigin = url.origin === location.origin;\r\n        const { params, route } = this.findMatchingRoute({\r\n            event,\r\n            request,\r\n            sameOrigin,\r\n            url,\r\n        });\r\n        let handler = route && route.handler;\r\n        const debugMessages = [];\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (handler) {\r\n                debugMessages.push([`Found a route to handle this request:`, route]);\r\n                if (params) {\r\n                    debugMessages.push([\r\n                        `Passing the following params to the route's handler:`,\r\n                        params,\r\n                    ]);\r\n                }\r\n            }\r\n        }\r\n        // If we don't have a handler because there was no matching route, then\r\n        // fall back to defaultHandler if that's defined.\r\n        const method = request.method;\r\n        if (!handler && this._defaultHandlerMap.has(method)) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                debugMessages.push(`Failed to find a matching route. Falling ` +\r\n                    `back to the default handler for ${method}.`);\r\n            }\r\n            handler = this._defaultHandlerMap.get(method);\r\n        }\r\n        if (!handler) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                // No handler so Workbox will do nothing. If logs is set of debug\r\n                // i.e. verbose, we should print out this information.\r\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\r\n            }\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            // We have a handler, meaning Workbox is going to handle the route.\r\n            // print the routing details to the console.\r\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\r\n            debugMessages.forEach((msg) => {\r\n                if (Array.isArray(msg)) {\r\n                    logger.log(...msg);\r\n                }\r\n                else {\r\n                    logger.log(msg);\r\n                }\r\n            });\r\n            logger.groupEnd();\r\n        }\r\n        // Wrap in try and catch in case the handle method throws a synchronous\r\n        // error. It should still callback to the catch handler.\r\n        let responsePromise;\r\n        try {\r\n            responsePromise = handler.handle({ url, request, event, params });\r\n        }\r\n        catch (err) {\r\n            responsePromise = Promise.reject(err);\r\n        }\r\n        // Get route's catch handler, if it exists\r\n        const catchHandler = route && route.catchHandler;\r\n        if (responsePromise instanceof Promise &&\r\n            (this._catchHandler || catchHandler)) {\r\n            responsePromise = responsePromise.catch(async (err) => {\r\n                // If there's a route catch handler, process that first\r\n                if (catchHandler) {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        // Still include URL here as it will be async from the console group\r\n                        // and may not make sense without the URL\r\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\r\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\r\n                        logger.error(`Error thrown by:`, route);\r\n                        logger.error(err);\r\n                        logger.groupEnd();\r\n                    }\r\n                    try {\r\n                        return await catchHandler.handle({ url, request, event, params });\r\n                    }\r\n                    catch (catchErr) {\r\n                        if (catchErr instanceof Error) {\r\n                            err = catchErr;\r\n                        }\r\n                    }\r\n                }\r\n                if (this._catchHandler) {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        // Still include URL here as it will be async from the console group\r\n                        // and may not make sense without the URL\r\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\r\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\r\n                        logger.error(`Error thrown by:`, route);\r\n                        logger.error(err);\r\n                        logger.groupEnd();\r\n                    }\r\n                    return this._catchHandler.handle({ url, request, event });\r\n                }\r\n                throw err;\r\n            });\r\n        }\r\n        return responsePromise;\r\n    }\r\n    /**\r\n     * Checks a request and URL (and optionally an event) against the list of\r\n     * registered routes, and if there's a match, returns the corresponding\r\n     * route along with any params generated by the match.\r\n     *\r\n     * @param {Object} options\r\n     * @param {URL} options.url\r\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\r\n     *     against the current origin.\r\n     * @param {Request} options.request The request to match.\r\n     * @param {Event} options.event The corresponding event.\r\n     * @return {Object} An object with `route` and `params` properties.\r\n     *     They are populated if a matching route was found or `undefined`\r\n     *     otherwise.\r\n     */\r\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\r\n        const routes = this._routes.get(request.method) || [];\r\n        for (const route of routes) {\r\n            let params;\r\n            // route.match returns type any, not possible to change right now.\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n            const matchResult = route.match({ url, sameOrigin, request, event });\r\n            if (matchResult) {\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    // Warn developers that using an async matchCallback is almost always\r\n                    // not the right thing to do.\r\n                    if (matchResult instanceof Promise) {\r\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\r\n                            `matchCallback function was used. Please convert the ` +\r\n                            `following route to use a synchronous matchCallback function:`, route);\r\n                    }\r\n                }\r\n                // See https://github.com/GoogleChrome/workbox/issues/2079\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                params = matchResult;\r\n                if (Array.isArray(params) && params.length === 0) {\r\n                    // Instead of passing an empty array in as params, use undefined.\r\n                    params = undefined;\r\n                }\r\n                else if (matchResult.constructor === Object && // eslint-disable-line\r\n                    Object.keys(matchResult).length === 0) {\r\n                    // Instead of passing an empty object in as params, use undefined.\r\n                    params = undefined;\r\n                }\r\n                else if (typeof matchResult === 'boolean') {\r\n                    // For the boolean value true (rather than just something truth-y),\r\n                    // don't set params.\r\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\r\n                    params = undefined;\r\n                }\r\n                // Return early if have a match.\r\n                return { route, params };\r\n            }\r\n        }\r\n        // If no match was found above, return and empty object.\r\n        return {};\r\n    }\r\n    /**\r\n     * Define a default `handler` that's called when no routes explicitly\r\n     * match the incoming request.\r\n     *\r\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\r\n     *\r\n     * Without a default handler, unmatched requests will go against the\r\n     * network as if there were no service worker present.\r\n     *\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     * @param {string} [method='GET'] The HTTP method to associate with this\r\n     * default handler. Each method has its own default.\r\n     */\r\n    setDefaultHandler(handler, method = defaultMethod) {\r\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\r\n    }\r\n    /**\r\n     * If a Route throws an error while handling a request, this `handler`\r\n     * will be called and given a chance to provide a response.\r\n     *\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     */\r\n    setCatchHandler(handler) {\r\n        this._catchHandler = normalizeHandler(handler);\r\n    }\r\n    /**\r\n     * Registers a route with the router.\r\n     *\r\n     * @param {workbox-routing.Route} route The route to register.\r\n     */\r\n    registerRoute(route) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isType(route, 'object', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route',\r\n            });\r\n            assert.hasMethod(route, 'match', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route',\r\n            });\r\n            assert.isType(route.handler, 'object', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route',\r\n            });\r\n            assert.hasMethod(route.handler, 'handle', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route.handler',\r\n            });\r\n            assert.isType(route.method, 'string', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route.method',\r\n            });\r\n        }\r\n        if (!this._routes.has(route.method)) {\r\n            this._routes.set(route.method, []);\r\n        }\r\n        // Give precedence to all of the earlier routes by adding this additional\r\n        // route to the end of the array.\r\n        this._routes.get(route.method).push(route);\r\n    }\r\n    /**\r\n     * Unregisters a route with the router.\r\n     *\r\n     * @param {workbox-routing.Route} route The route to unregister.\r\n     */\r\n    unregisterRoute(route) {\r\n        if (!this._routes.has(route.method)) {\r\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\r\n                method: route.method,\r\n            });\r\n        }\r\n        const routeIndex = this._routes.get(route.method).indexOf(route);\r\n        if (routeIndex > -1) {\r\n            this._routes.get(route.method).splice(routeIndex, 1);\r\n        }\r\n        else {\r\n            throw new WorkboxError('unregister-route-route-not-registered');\r\n        }\r\n    }\r\n}\r\nexport { Router };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { Router } from '../Router.js';\r\nimport '../_version.js';\r\nlet defaultRouter;\r\n/**\r\n * Creates a new, singleton Router instance if one does not exist. If one\r\n * does already exist, that instance is returned.\r\n *\r\n * @private\r\n * @return {Router}\r\n */\r\nexport const getOrCreateDefaultRouter = () => {\r\n    if (!defaultRouter) {\r\n        defaultRouter = new Router();\r\n        // The helpers that use the default Router assume these listeners exist.\r\n        defaultRouter.addFetchListener();\r\n        defaultRouter.addCacheListener();\r\n    }\r\n    return defaultRouter;\r\n};\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport { Route } from './Route.js';\r\nimport { RegExpRoute } from './RegExpRoute.js';\r\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\r\nimport './_version.js';\r\n/**\r\n * Easily register a RegExp, string, or function with a caching\r\n * strategy to a singleton Router instance.\r\n *\r\n * This method will generate a Route for you if needed and\r\n * call {@link workbox-routing.Router#registerRoute}.\r\n *\r\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\r\n * If the capture param is a `Route`, all other arguments will be ignored.\r\n * @param {workbox-routing~handlerCallback} [handler] A callback\r\n * function that returns a Promise resulting in a Response. This parameter\r\n * is required if `capture` is not a `Route` object.\r\n * @param {string} [method='GET'] The HTTP method to match the Route\r\n * against.\r\n * @return {workbox-routing.Route} The generated `Route`.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nfunction registerRoute(capture, handler, method) {\r\n    let route;\r\n    if (typeof capture === 'string') {\r\n        const captureUrl = new URL(capture, location.href);\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\r\n                throw new WorkboxError('invalid-string', {\r\n                    moduleName: 'workbox-routing',\r\n                    funcName: 'registerRoute',\r\n                    paramName: 'capture',\r\n                });\r\n            }\r\n            // We want to check if Express-style wildcards are in the pathname only.\r\n            // TODO: Remove this log message in v4.\r\n            const valueToCheck = capture.startsWith('http')\r\n                ? captureUrl.pathname\r\n                : capture;\r\n            // See https://github.com/pillarjs/path-to-regexp#parameters\r\n            const wildcards = '[*:?+]';\r\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\r\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\r\n                    `character (${wildcards}). Strings are now always interpreted as ` +\r\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\r\n            }\r\n        }\r\n        const matchCallback = ({ url }) => {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (url.pathname === captureUrl.pathname &&\r\n                    url.origin !== captureUrl.origin) {\r\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\r\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\r\n                        `if they match the entire URL.`);\r\n                }\r\n            }\r\n            return url.href === captureUrl.href;\r\n        };\r\n        // If `capture` is a string then `handler` and `method` must be present.\r\n        route = new Route(matchCallback, handler, method);\r\n    }\r\n    else if (capture instanceof RegExp) {\r\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\r\n        route = new RegExpRoute(capture, handler, method);\r\n    }\r\n    else if (typeof capture === 'function') {\r\n        // If `capture` is a function then `handler` and `method` must be present.\r\n        route = new Route(capture, handler, method);\r\n    }\r\n    else if (capture instanceof Route) {\r\n        route = capture;\r\n    }\r\n    else {\r\n        throw new WorkboxError('unsupported-route-type', {\r\n            moduleName: 'workbox-routing',\r\n            funcName: 'registerRoute',\r\n            paramName: 'capture',\r\n        });\r\n    }\r\n    const defaultRouter = getOrCreateDefaultRouter();\r\n    defaultRouter.registerRoute(route);\r\n    return route;\r\n}\r\nexport { registerRoute };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\r\nimport './_version.js';\r\n/**\r\n * If a Route throws an error while handling a request, this `handler`\r\n * will be called and given a chance to provide a response.\r\n *\r\n * @param {workbox-routing~handlerCallback} handler A callback\r\n * function that returns a Promise resulting in a Response.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nfunction setCatchHandler(handler) {\r\n    const defaultRouter = getOrCreateDefaultRouter();\r\n    defaultRouter.setCatchHandler(handler);\r\n}\r\nexport { setCatchHandler };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\r\nimport './_version.js';\r\n/**\r\n * Define a default `handler` that's called when no routes explicitly\r\n * match the incoming request.\r\n *\r\n * Without a default handler, unmatched requests will go against the\r\n * network as if there were no service worker present.\r\n *\r\n * @param {workbox-routing~handlerCallback} handler A callback\r\n * function that returns a Promise resulting in a Response.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nfunction setDefaultHandler(handler) {\r\n    const defaultRouter = getOrCreateDefaultRouter();\r\n    defaultRouter.setDefaultHandler(handler);\r\n}\r\nexport { setDefaultHandler };\r\n"],"names":["self","_","e","defaultMethod","validMethods","normalizeHandler","handler","assert","hasMethod","moduleName","className","funcName","paramName","isType","handle","Route","constructor","match","method","isOneOf","setCatchHandler","catchHandler","NavigationRoute","allowlist","denylist","isArrayOfClass","RegExp","options","_match","_allowlist","_denylist","url","request","mode","pathnameAndSearch","pathname","search","regExp","test","logger","log","toString","some","debug","RegExpRoute","isInstance","result","exec","href","origin","location","index","slice","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","responsePromise","handleRequest","respondWith","addCacheListener","data","type","payload","urlsToCache","requestPromises","Promise","all","map","entry","Request","waitUntil","ports","then","postMessage","URL","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","getFriendlyURL","groupCollapsed","forEach","msg","Array","isArray","groupEnd","err","reject","_catchHandler","catch","error","catchErr","Error","matchResult","warn","length","undefined","Object","keys","setDefaultHandler","set","registerRoute","unregisterRoute","WorkboxError","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","wildcards","matchCallback"],"mappings":"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"}